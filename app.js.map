{"mappings":"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","sources":["public/js/index.js","public/js/mapbox.js","public/js/auth.js","public/js/alerts.js","public/js/updateSettings.js"],"sourcesContent":["import { displayMap } from './mapbox';\r\nimport { login, logout } from './auth';\r\nimport { updateSettings } from './updateSettings';\r\n\r\n// DOM ELEMENTS\r\nconst mapBox = document.getElementById('map');\r\nconst loginForm = document.querySelector('.form--login');\r\nconst logOutBtn = document.querySelector('.nav__el--logout');\r\nconst userDataForm = document.querySelector('.form-user-data');\r\nconst userPasswordForm = document.querySelector('.form-user-password');\r\n\r\n// DELEGATION\r\nif (mapBox) {\r\n  const locations = JSON.parse(mapBox.dataset.locations);\r\n  displayMap(locations);\r\n}\r\n\r\nif (loginForm) {\r\n  // Getting email and password from \"/login\" form\r\n  loginForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n\r\n    const email = document.getElementById('email').value;\r\n    const password = document.getElementById('password').value;\r\n\r\n    login(email, password);\r\n  });\r\n}\r\n\r\nif (logOutBtn) logOutBtn.addEventListener('click', logout);\r\n\r\nif (userDataForm) {\r\n  userDataForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n\r\n    const form = new FormData();\r\n    form.append('name', document.getElementById('name').value);\r\n    form.append('email', document.getElementById('email').value);\r\n    form.append('photo', document.getElementById('photo').files[0]);\r\n\r\n    updateSettings(form, 'data');\r\n  });\r\n}\r\n\r\nif (userPasswordForm) {\r\n  userPasswordForm.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n\r\n    document.querySelector('.btn--save-password').textContent = 'Updating...';\r\n\r\n    const passwordCurrent = document.getElementById('password-current').value;\r\n    const password = document.getElementById('password').value;\r\n    const passwordConfirm = document.getElementById('password-confirm').value;\r\n\r\n    await updateSettings(\r\n      { passwordCurrent, password, passwordConfirm },\r\n      'password'\r\n    );\r\n\r\n    document.querySelector('.btn--save-password').textContent = 'Save password';\r\n    document.getElementById('password-current').value = '';\r\n    document.getElementById('password').value = '';\r\n    document.getElementById('password-confirm').value = '';\r\n  });\r\n}\r\n","export const displayMap = (locations) => {\r\n  mapboxgl.accessToken =\r\n    'pk.eyJ1IjoiZGV2cml0aWsiLCJhIjoiY2xpbXUybmg2MHVzbDNobW0xa2lsdTFndSJ9.V2iTPWHPHPK021uRJxqbPA';\r\n\r\n  let map = new mapboxgl.Map({\r\n    container: 'map',\r\n    style: 'mapbox://styles/mapbox/streets-v11',\r\n    scrollZoom: false,\r\n    // center: [-118.113491, 34.111745],\r\n    // zoom: 10,\r\n    // interactive: false,\r\n  });\r\n\r\n  const bounds = new mapboxgl.LngLatBounds();\r\n\r\n  locations.forEach((loc) => {\r\n    // Create marker\r\n    const el = document.createElement('div');\r\n    el.className = 'marker';\r\n\r\n    // Add marker\r\n    new mapboxgl.Marker({\r\n      element: el,\r\n      anchor: 'bottom',\r\n    })\r\n      .setLngLat(loc.coordinates)\r\n      .addTo(map);\r\n\r\n    // Add popup\r\n    new mapboxgl.Popup({\r\n      offset: 30,\r\n      closeOnClick: false,\r\n      focusAfterOpen: false,\r\n    })\r\n      .setLngLat(loc.coordinates)\r\n      .setHTML(`<p>Day ${loc.day}: ${loc.description}</p>`)\r\n      .addTo(map);\r\n\r\n    // Extend map bounds to include current location\r\n    bounds.extend(loc.coordinates);\r\n  });\r\n\r\n  map.fitBounds(bounds, {\r\n    padding: {\r\n      top: 200,\r\n      bottom: 150,\r\n      left: 100,\r\n      right: 100,\r\n    },\r\n  });\r\n};\r\n","import axios from 'axios';\r\nimport { showAlert } from './alerts';\r\n\r\nexport const login = async (email, password) => {\r\n  try {\r\n    const response = await axios({\r\n      method: 'POST',\r\n      url: '/api/v1/users/login',\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    });\r\n\r\n    if (response.data.status === 'success') {\r\n      showAlert('success', 'Logged in successfully!');\r\n      window.setTimeout(() => {\r\n        location.assign('/');\r\n      }, 1500);\r\n    }\r\n  } catch (error) {\r\n    showAlert('error', error.response.data.message);\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    const response = await axios({\r\n      method: 'GET',\r\n      url: '/api/v1/users/logout',\r\n    });\r\n\r\n    // if (response.data.status === 'success') location.reload(true);\r\n    if (response.data.status === 'success') location.assign('/login');\r\n  } catch (error) {\r\n    showAlert('error', 'Error logging out! Try again.');\r\n  }\r\n};\r\n","export const hideAlert = () => {\r\n  const el = document.querySelector('.alert');\r\n  if (el) el.parentElement.removeChild(el);\r\n};\r\n\r\n/**\r\n * @param {String} type either \"success\" or \"error\"\r\n * @param {String} message alert message\r\n */\r\nexport const showAlert = (type, message) => {\r\n  // first hide all the alerts that already exists.\r\n  hideAlert();\r\n\r\n  const markup = `<div class=\"alert alert--${type}\">${message}</div>`;\r\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\r\n\r\n  // hide all the alerts after 5 seconds.\r\n  window.setTimeout(hideAlert, 5000);\r\n};\r\n","import axios from 'axios';\r\nimport { showAlert } from './alerts';\r\n\r\n/**\r\n * @param {object} data user's name and email\r\n * @param {string} type either \"password\" or \"data\"\r\n */\r\nexport const updateSettings = async (data, type) => {\r\n  try {\r\n    const url =\r\n      type === 'password'\r\n        ? '/api/v1/users/updateMyPassword'\r\n        : '/api/v1/users/updateMe';\r\n\r\n    const response = await axios({\r\n      method: 'PATCH',\r\n      url,\r\n      data,\r\n    });\r\n\r\n    if (response.data.status === 'success') {\r\n      showAlert('success', `${type.toUpperCase()} updated successfully!`);\r\n    }\r\n  } catch (error) {\r\n    showAlert('error', error.response.data.message);\r\n  }\r\n};\r\n"],"names":[],"version":3,"file":"app.js.map"}